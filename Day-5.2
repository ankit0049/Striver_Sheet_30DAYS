Approach 1 :

First we Iterate On whole Linkedlist and Count 
the Number of Node Present In the LinkedList . 
then divide the count /2 +1 and again Iterate when 
we hit the count/2+1 we simply return that.



Approach 2 : 
Turtiose Method 
here We consider 2 Pointer 
one as Slow & one as Fast 
slow move always 1 & the otherone is always 2

likewise we move until the fast !=null or fast.next!-null
if we get these means we are at the middle
element or part.


Code :

Public static void middle(Node head)
{
    Node slow = head ;
    Node fast = head ;

    while(fast!=null && fast.next!=null)
    {
        slow=slow.next;
        fast = fast.next.next;
    } 
    return slow;
}